#include <stdio.h>
#include <stdlib.h>// necessario para as funcoes rand() e srand()
#include <time.h>//necessario para funcao time()
#include <conio.h>
#define N 1

//Funcao responsavel por comparar a maior soma:
int compara_maior(int V1, int V2, int V3, int V4, int V5){
    if(V1>V2 && V1>V3 && V1>V4 && V1>V5){
        return V1;
    }
    else{ 
        if(V2>V1 && V2>V3 && V2>V4 && V2>V5){
            return V2;
        }
        else{
            if(V3>V1 && V3>V2 && V3>V4 && V3>V5){
                return V3;
            }
            else{
                if(V4>V1 && V4>V2 && V4>V3 && V4>V5){
                    return V4;
                }
                else{
                    if(V5>V1 && V5>V2 && V5>V3 && V5>V4){
                        return V5;
                    }
                }
            }
        }

    }

}

//Funcao responsavel por verificar se o numero e par:
int  ehPar(int num){
	if(num% 2 == 0){
	  return 1;
	}
	return  0;
}

//Funcao responsavel por somar os numeros pares:
int somar_numeros_pares_recursivo(int q,int x[]){
int r;
	if(q== 0){
	return  ehPar(x[0])?x[0]:0;
	}
r = ehPar(x[q])?x[q]:0;
return r+ somar_numeros_pares_recursivo(q-1,x);
}

//Funcao responsavel por imprimir os valores:
void imprimir_resultado(int x[]){
  	int i;
	for(i=0;i<=1;i++){
	printf("%d ", x[i]);
	}
}

//Funcao responsavel por gerar os valores aleatorios:
int gerar_valor(int x[]){
int i;
    for(i=0;i<=N;i++){
        x[i]= (rand() % 100);
    }
}


int main(){

int soma_v1, soma_v2, soma_v3, soma_v4, soma_v5;

int v1[1], v2[1], v3[1], v4[1], v5[1];

//gerando valores aleatorios
srand(time(NULL));
gerar_valor(v1);
gerar_valor(v2);
gerar_valor(v3);
gerar_valor(v4);
gerar_valor(v5);

//imprimindo o valor dos vetores
printf("Os valores do vetor 1:\n");
imprimir_resultado(v1);	
printf("\nOs valores do vetor 2:\n");
imprimir_resultado(v2);	
printf("\nOs valores do vetor 3:\n");
imprimir_resultado(v3);	
printf("\nOs valores do vetor 4:\n");
imprimir_resultado(v4);	
printf("\nOs valores do vetor 5:\n");
imprimir_resultado(v5);	

//somar os pares de cada vetor
soma_v1 = somar_numeros_pares_recursivo(N, v1);
printf("\n O valor da soma do vetor 1: %d", soma_v1);

soma_v2 = somar_numeros_pares_recursivo(N, v2);
printf("\n O valor da soma do vetor 2: %d", soma_v2);

soma_v3 = somar_numeros_pares_recursivo(N, v3);
printf("\n O valor da soma do vetor 3: %d", soma_v3);

soma_v4 = somar_numeros_pares_recursivo(N, v4);
printf("\n O valor da soma do vetor 4: %d", soma_v4);

soma_v5 = somar_numeros_pares_recursivo(N, v5);
printf("\n O valor da soma do vetor 5: %d", soma_v5);

//comparar o maior
printf("\nO maior valor Ã©: %d\n ", compara_maior(soma_v1, soma_v2, soma_v3, soma_v4, soma_v5));
}
